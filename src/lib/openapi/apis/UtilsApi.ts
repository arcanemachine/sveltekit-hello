/* tslint:disable */
/* eslint-disable */
/**
 * Todo List API
 * A basic todo list API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Csrfmiddlewaretoken,
} from '../models';
import {
    CsrfmiddlewaretokenFromJSON,
    CsrfmiddlewaretokenToJSON,
} from '../models';

export interface UtilsCsrfmiddlewaretokenCreateRequest {
    csrfmiddlewaretoken: Csrfmiddlewaretoken;
}

/**
 * 
 */
export class UtilsApi extends runtime.BaseAPI {

    /**
     */
    async utilsCsrfmiddlewaretokenCreateRaw(requestParameters: UtilsCsrfmiddlewaretokenCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Csrfmiddlewaretoken>> {
        if (requestParameters.csrfmiddlewaretoken === null || requestParameters.csrfmiddlewaretoken === undefined) {
            throw new runtime.RequiredError('csrfmiddlewaretoken','Required parameter requestParameters.csrfmiddlewaretoken was null or undefined when calling utilsCsrfmiddlewaretokenCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // tokenAuth authentication
        }

        const response = await this.request({
            path: `/api/utils/csrfmiddlewaretoken/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CsrfmiddlewaretokenToJSON(requestParameters.csrfmiddlewaretoken),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CsrfmiddlewaretokenFromJSON(jsonValue));
    }

    /**
     */
    async utilsCsrfmiddlewaretokenCreate(requestParameters: UtilsCsrfmiddlewaretokenCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Csrfmiddlewaretoken> {
        const response = await this.utilsCsrfmiddlewaretokenCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async utilsCsrfmiddlewaretokenRetrieveRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Csrfmiddlewaretoken>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // tokenAuth authentication
        }

        const response = await this.request({
            path: `/api/utils/csrfmiddlewaretoken/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CsrfmiddlewaretokenFromJSON(jsonValue));
    }

    /**
     */
    async utilsCsrfmiddlewaretokenRetrieve(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Csrfmiddlewaretoken> {
        const response = await this.utilsCsrfmiddlewaretokenRetrieveRaw(initOverrides);
        return await response.value();
    }

}
